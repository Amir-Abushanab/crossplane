---
# This allows Crossplane to manage our new composite resource.
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: privatepostgresqlservers.azure.example.org
  labels:
    rbac.crossplane.io/aggregate-to-crossplane: "true"
rules:
- apiGroups:
  - azure.example.org
  resources:
  - privatepostgresqlservers
  - privatepostgresqlservers/status
  - privatepostgresqlserverrequirements
  - privatepostgresqlserverrequirements/status
  verbs:
  - "*"
---
# This defines our new "PrivatePostgreSQLServer" composite resource. A
# PrivatePostgreSQLServer is a combination of an Azure PostgreSQLServer and an
# Azure Virtual Network rule.
apiVersion: apiextensions.crossplane.io/v1alpha1
kind: InfrastructureDefinition
metadata:
  name: privatepostgresqlservers.azure.example.org
spec:
  # The set of connection secret keys that this composite resource exposes. Each
  # key must be provided by the connectionDetails of a composed resource.
  connectionSecretKeys:
  - username
  - password
  - endpoint
  # The schema of this composite resource, in the form of a partial template for
  # a Kubernetes CustomResourceDefinition.
  crdSpecTemplate:
    group: azure.example.org
    version: v1alpha1
    names:
      kind: PrivatePostgreSQLServer
      listKind: PrivatePostgreSQLServerList
      plural: privatepostgresqlservers
      singular: privatepostgresqlserver
    validation:
      openAPIV3Schema:
        type: object
        properties:
          spec:
            type: object
            properties:
              version:
                description: PostgreSQL engine version
                type: string
                enum: ["9.5", "9.6", "10.0", "10.2", "11"]
              storageGB:
                type: integer
              location:
                description: Geographic location of this PostgreSQL server.
                type: string
              networkGroupSelector:
                type: object
                description: Selects a NetworkGroup for this PostgreSQL server.
                properties:
                  matchLabels:
                    type: object
                    additionalProperties:
                      type: string
                required:
                - matchLabels
              providerRef:
                type: object
                description: Crossplane Azure provider credentials to use.
                properties:
                  name:
                    type: string
                required:
                - name
            required:
            - version
            - storageGB
            - location
            - networkGroupSelector
            - providerRef
---
# This publishes our newly defined PrivatePostgreSQLServer as available for
# applications to use. A PrivatePostgreSQLServerRequirement may be created by
# app operators in the namespace of their app in order to provision a new
# PrivatePostgreSQLServer on-demand. The PrivatePostgreSQLServerRequirement
# supports all of the fields defined by the InfrastructureDefinition schema.
apiVersion: apiextensions.crossplane.io/v1alpha1
kind: InfrastructurePublication
metadata:
  name: privatepostgresqlservers.azure.example.org
spec:
  infrastructureDefinitionRef:
    name: privatepostgresqlservers.azure.example.org
---
# This specifies the resources that should be composed when a
# PrivatePostgreSQLServer is created. Multiple Compositions may exist for any
# one kind of composite resource. The composite resource (i.e. the
# PrivatePostgreSQLServer) can influence which Composition is used via a
# spec.compositionSelector.matchLabels field that is automatically added to all
# composite resources. In future it will be possible mark a composition as the
# default, or force an InfrastructureDefinition to use a particular Composition.
# Currently a reference or selector must be specified.
apiVersion: apiextensions.crossplane.io/v1alpha1
kind: Composition
metadata:
  name: privatepostgresqlservers.azure.example.org
spec:
  writeConnectionSecretsToNamespace: crossplane-system
  reclaimPolicy: Delete
  from:
    apiVersion: azure.example.org/v1alpha1
    kind: PrivatePostgreSQLServer
  to:
  - base:
      apiVersion: database.azure.crossplane.io/v1beta1
      kind: PostgreSQLServer
      spec:
        forProvider:
          administratorLogin: notadmin
          sslEnforcement: Disabled
          sku:
            tier: GeneralPurpose
            capacity: 8
            family: Gen5
          storageProfile:
            backupRetentionDays: 7
            geoRedundantBackup: Disabled
        writeConnectionSecretToRef:
          namespace: crossplane-system
        reclaimPolicy: Delete
    patches:
      # Copy any labels from our PrivatePostgreSQLServer to the PostgreSQLServer
      # that it composes.
    - fromFieldPath: "metadata.labels"
      toFieldPath: "metadata.labels"
      # Set the external name annotation of the composed PostgreSQLServer to
      # that of the PrivatePostgreSQLServer composite, if one exists.
    - fromFieldPath: "metadata.annotations[crossplane.io/external-name]"
      toFieldPath: "metadata.annotations[crossplane.io/external-name]"
      # Use the providerRef of the PrivatePostgreSQLServer.
    - fromFieldPath: "spec.providerRef.name"
      toFieldPath: "spec.providerRef.name"
      # Store the connection secret for this PostgreSQLServer in a secret name
      # derived from the PrivatePostgreSQLServer's UID. Use the string format
      # transform function to append -postgresqlserver to the UID.
    - fromFieldPath: "metadata.uid"
      toFieldPath: "spec.writeConnectionSecretToRef.name"
      transforms:
      - type: string
        string:
          fmt: "%s-postgresqlserver"
      # Use the networkGroupSelector of the PrivatePostgreSQLServer to select
      # a resource group in which to create the PostgreSQLServer.
    - fromFieldPath: "spec.networkGroupSelector.matchLabels"
      toFieldPath: "spec.forProvider.resourceGroupNameSelector.matchLabels"
      # Copy the version, location, and storageGB from the
      # PrivatePostgreSQLServer. Use the math transform to multiply the GB by
      # 1024 to turn it into MB, which Azure expects.
    - fromFieldPath: "spec.version"
      toFieldPath: "spec.forProvider.version"
    - fromFieldPath: "spec.location"
      toFieldPath: "spec.forProvider.location"
    - fromFieldPath: "spec.storageGB"
      toFieldPath: "spec.forProvider.storageProfile.storageMB"
      transforms:
        - type: math
          math:
            multiply: 1024
    # The below connection details of the composed PostgreSQLServer should be
    # copied from the PostgreSQLServer's connection secret to the composite
    # PrivatePostgreSQLServer's connection secret.
    connectionDetails:
    - fromConnectionSecretKey: username
    - fromConnectionSecretKey: password
    - fromConnectionSecretKey: endpoint
  - base:
      apiVersion: database.azure.crossplane.io/v1alpha3
      kind: PostgreSQLServerVirtualNetworkRule
      spec:
        # This selector ensures this PostgreSQLServerVirtualNetworkRule will
        # select and use the above PostgreSQLServer. They will both be
        # controlled by the composite resource, and thus their controller
        # references will match.
        serverNameSelector:
          matchControllerRef: true
        properties:
          virtualNetworkSubnetIdSelector:
            name: sample-subnet
        reclaimPolicy: Delete
    patches:
    - fromFieldPath: "metadata.labels"
      toFieldPath: "metadata.labels"
    - fromFieldPath: "metadata.annotations[crossplane.io/external-name]"
      toFieldPath: "metadata.annotations[crossplane.io/external-name]"
    - fromFieldPath: "spec.providerRef.name"
      toFieldPath: "spec.providerRef.name"
      # Use the networkGroupSelector of the PrivatePostgreSQLServer to select
      # a resource group and subnet in which to create the
      # PostgreSQLServerVirtualNetworkRule.
    - fromFieldPath: "spec.networkGroupSelector.matchLabels"
      toFieldPath: "spec.resourceGroupNameSelector.matchLabels"
    - fromFieldPath: "spec.networkGroupSelector.matchLabels"
      toFieldPath: "spec.properties.virtualNetworkSubnetIdSelector.matchLabels"